-- MySQL Script generated by MySQL Workbench
-- Sun Jul 26 11:38:13 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema db_ecommerce
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema db_ecommerce
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `db_ecommerce` DEFAULT CHARACTER SET utf8 ;
USE `db_ecommerce` ;

-- -----------------------------------------------------
-- Table `tb_persons`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tb_persons` ;

CREATE TABLE IF NOT EXISTS `tb_persons` (
  `idperson` INT(11) NOT NULL AUTO_INCREMENT,
  `desperson` VARCHAR(64) NOT NULL,
  `desemail` VARCHAR(128) NULL DEFAULT NULL,
  `nrphone` BIGINT(20) NULL DEFAULT NULL,
  `dtregister` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idperson`))
ENGINE = InnoDB
AUTO_INCREMENT = 2
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `tb_addresses`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tb_addresses` ;

CREATE TABLE IF NOT EXISTS `tb_addresses` (
  `idaddress` INT(11) NOT NULL AUTO_INCREMENT,
  `idperson` INT(11) NOT NULL,
  `desaddress` VARCHAR(128) NOT NULL,
  `descomplement` VARCHAR(32) NULL DEFAULT NULL,
  `descity` VARCHAR(32) NOT NULL,
  `desstate` VARCHAR(32) NOT NULL,
  `descountry` VARCHAR(32) NOT NULL,
  `nrzipcode` INT(11) NOT NULL,
  `dtregister` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idaddress`),
  CONSTRAINT `fk_addresses_persons`
    FOREIGN KEY (`idperson`)
    REFERENCES `tb_persons` (`idperson`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `fk_addresses_persons_idx` ON `tb_addresses` (`idperson` ASC);


-- -----------------------------------------------------
-- Table `tb_users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tb_users` ;

CREATE TABLE IF NOT EXISTS `tb_users` (
  `iduser` INT(11) NOT NULL AUTO_INCREMENT,
  `idperson` INT(11) NOT NULL,
  `deslogin` VARCHAR(64) NOT NULL,
  `despassword` VARCHAR(256) NOT NULL,
  `inadmin` TINYINT(4) NOT NULL DEFAULT '0',
  `dtregister` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`iduser`),
  CONSTRAINT `fk_users_persons`
    FOREIGN KEY (`idperson`)
    REFERENCES `tb_persons` (`idperson`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
AUTO_INCREMENT = 2
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `FK_users_persons_idx` ON `tb_users` (`idperson` ASC);


-- -----------------------------------------------------
-- Table `tb_carts`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tb_carts` ;

CREATE TABLE IF NOT EXISTS `tb_carts` (
  `idcart` INT(11) NOT NULL,
  `dessessionid` VARCHAR(64) NOT NULL,
  `iduser` INT(11) NULL DEFAULT NULL,
  `idaddress` INT(11) NULL DEFAULT NULL,
  `vlfreight` DECIMAL(10,2) NULL DEFAULT NULL,
  `dtregister` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idcart`),
  CONSTRAINT `fk_carts_addresses`
    FOREIGN KEY (`idaddress`)
    REFERENCES `tb_addresses` (`idaddress`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_carts_users`
    FOREIGN KEY (`iduser`)
    REFERENCES `tb_users` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `FK_carts_users_idx` ON `tb_carts` (`iduser` ASC);

CREATE INDEX `fk_carts_addresses_idx` ON `tb_carts` (`idaddress` ASC);


-- -----------------------------------------------------
-- Table `tb_products`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tb_products` ;

CREATE TABLE IF NOT EXISTS `tb_products` (
  `idproduct` INT(11) NOT NULL AUTO_INCREMENT,
  `desproduct` VARCHAR(64) NOT NULL,
  `vlprice` DECIMAL(10,2) NOT NULL,
  `vlwidth` DECIMAL(10,2) NOT NULL,
  `vlheight` DECIMAL(10,2) NOT NULL,
  `vllength` DECIMAL(10,2) NOT NULL,
  `vlweight` DECIMAL(10,2) NOT NULL,
  `desurl` VARCHAR(128) NOT NULL,
  `dtregister` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idproduct`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `tb_cartsproducts`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tb_cartsproducts` ;

CREATE TABLE IF NOT EXISTS `tb_cartsproducts` (
  `idcartproduct` INT(11) NOT NULL AUTO_INCREMENT,
  `idcart` INT(11) NOT NULL,
  `idproduct` INT(11) NOT NULL,
  `dtremoved` DATETIME NOT NULL,
  `dtregister` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idcartproduct`),
  CONSTRAINT `fk_cartsproducts_carts`
    FOREIGN KEY (`idcart`)
    REFERENCES `tb_carts` (`idcart`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_cartsproducts_products`
    FOREIGN KEY (`idproduct`)
    REFERENCES `tb_products` (`idproduct`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `FK_cartsproducts_carts_idx` ON `tb_cartsproducts` (`idcart` ASC);

CREATE INDEX `FK_cartsproducts_products_idx` ON `tb_cartsproducts` (`idproduct` ASC);

alter table tb_cartsproducts add constraint fk_cartsproducts_products
FOREIGN KEY (idproduct)
REFERENCES tb_products (idproduct)
ON DELETE CASCADE
ON UPDATE CASCADE;

-- -----------------------------------------------------
-- Table `tb_categories`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tb_categories` ;

CREATE TABLE IF NOT EXISTS `tb_categories` (
  `idcategory` INT(11) NOT NULL AUTO_INCREMENT,
  `descategory` VARCHAR(32) NOT NULL,
  `dtregister` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idcategory`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `tb_ordersstatus`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tb_ordersstatus` ;

CREATE TABLE IF NOT EXISTS `tb_ordersstatus` (
  `idstatus` INT(11) NOT NULL AUTO_INCREMENT,
  `desstatus` VARCHAR(32) NOT NULL,
  `dtregister` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idstatus`))
ENGINE = InnoDB
AUTO_INCREMENT = 5
DEFAULT CHARACTER SET = utf8;


-- -----------------------------------------------------
-- Table `tb_orders`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tb_orders` ;

CREATE TABLE IF NOT EXISTS `tb_orders` (
  `idorder` INT(11) NOT NULL AUTO_INCREMENT,
  `idcart` INT(11) NOT NULL,
  `iduser` INT(11) NOT NULL,
  `idstatus` INT(11) NOT NULL,
  `vltotal` DECIMAL(10,2) NOT NULL,
  `dtregister` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idorder`),
  CONSTRAINT `fk_orders_carts`
    FOREIGN KEY (`idcart`)
    REFERENCES `tb_carts` (`idcart`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orders_ordersstatus`
    FOREIGN KEY (`idstatus`)
    REFERENCES `tb_ordersstatus` (`idstatus`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orders_users`
    FOREIGN KEY (`iduser`)
    REFERENCES `tb_users` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `FK_orders_carts_idx` ON `tb_orders` (`idcart` ASC);

CREATE INDEX `FK_orders_users_idx` ON `tb_orders` (`iduser` ASC);

CREATE INDEX `fk_orders_ordersstatus_idx` ON `tb_orders` (`idstatus` ASC);


-- -----------------------------------------------------
-- Table `tb_productscategories`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tb_productscategories` ;

CREATE TABLE IF NOT EXISTS `tb_productscategories` (
  `idcategory` INT(11) NOT NULL,
  `idproduct` INT(11) NOT NULL,
  PRIMARY KEY (`idcategory`, `idproduct`),
  CONSTRAINT `fk_productscategories_categories`
    FOREIGN KEY (`idcategory`)
    REFERENCES `tb_categories` (`idcategory`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_productscategories_products`
    FOREIGN KEY (`idproduct`)
    REFERENCES `tb_products` (`idproduct`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

alter table tb_productscategories drop foreign key fk_productscategories_products;

alter table tb_productscategories add constraint fk_productscategories_products
FOREIGN KEY (idproduct)
REFERENCES tb_products (idproduct)
ON DELETE CASCADE
ON UPDATE CASCADE;

CREATE INDEX `fk_productscategories_products_idx` ON `tb_productscategories` (`idproduct` ASC);
-- -----------------------------------------------------
-- Table `tb_userslogs`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tb_userslogs` ;

CREATE TABLE IF NOT EXISTS `tb_userslogs` (
  `idlog` INT(11) NOT NULL AUTO_INCREMENT,
  `iduser` INT(11) NOT NULL,
  `deslog` VARCHAR(128) NOT NULL,
  `desip` VARCHAR(45) NOT NULL,
  `desuseragent` VARCHAR(128) NOT NULL,
  `dessessionid` VARCHAR(64) NOT NULL,
  `desurl` VARCHAR(128) NOT NULL,
  `dtregister` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idlog`),
  CONSTRAINT `fk_userslogs_users`
    FOREIGN KEY (`iduser`)
    REFERENCES `tb_users` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `fk_userslogs_users_idx` ON `tb_userslogs` (`iduser` ASC);


-- -----------------------------------------------------
-- Table `tb_userspasswordsrecoveries`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `tb_userspasswordsrecoveries` ;

CREATE TABLE IF NOT EXISTS `tb_userspasswordsrecoveries` (
  `idrecovery` INT(11) NOT NULL AUTO_INCREMENT,
  `iduser` INT(11) NOT NULL,
  `desip` VARCHAR(45) NOT NULL,
  `dtrecovery` DATETIME NULL DEFAULT NULL,
  `dtregister` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idrecovery`),
  CONSTRAINT `fk_userspasswordsrecoveries_users`
    FOREIGN KEY (`iduser`)
    REFERENCES `tb_users` (`iduser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8;

CREATE INDEX `fk_userspasswordsrecoveries_users_idx` ON `tb_userspasswordsrecoveries` (`iduser` ASC);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

CREATE TABLE `tb_categoriesproducts` (
  `idcategory` int(11) NOT NULL,
  `idproduct` int(11) NOT NULL,
  PRIMARY KEY (`idcategory`,`idproduct`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE `tb_carts` (
  `idcart` int(11) NOT NULL AUTO_INCREMENT,
  `dessessionid` varchar(64) NOT NULL,
  `iduser` int(11) DEFAULT NULL,
  `deszipcode` char(8) DEFAULT NULL,
  `vlfreight` decimal(10,2) DEFAULT NULL,
  `nrdays` int(11) DEFAULT NULL,
  `dtregister` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`idcart`),
  KEY `FK_carts_users_idx` (`iduser`),
  CONSTRAINT `fk_carts_users` FOREIGN KEY (`iduser`) REFERENCES `tb_users` (`iduser`) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;


DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_users_save`(
pdesperson VARCHAR(64), 
pdeslogin VARCHAR(64), 
pdespassword VARCHAR(256), 
pdesemail VARCHAR(128), 
pnrphone BIGINT, 
pinadmin TINYINT
)
BEGIN
	
    DECLARE vidperson INT;
    
	INSERT INTO tb_persons (desperson, desemail, nrphone)
    VALUES(pdesperson, pdesemail, pnrphone);
    
    SET vidperson = LAST_INSERT_ID();
    
    INSERT INTO tb_users (idperson, deslogin, despassword, inadmin)
    VALUES(vidperson, pdeslogin, pdespassword, pinadmin);
    
    SELECT * FROM tb_users a INNER JOIN tb_persons b USING(idperson) WHERE a.iduser = vidperson;
    
END ;;
DELIMITER ;sp_users_save

-- sp_usersupdate_save
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_usersupdate_save`(
piduser INT,
pdesperson VARCHAR(64), 
pdeslogin VARCHAR(64), 
pdespassword VARCHAR(256), 
pdesemail VARCHAR(128), 
pnrphone BIGINT, 
pinadmin TINYINT
)
BEGIN
	
    DECLARE vidperson INT;
    
	SELECT idperson INTO vidperson
    FROM tb_users
    WHERE iduser = piduser;
    
    UPDATE tb_persons
    SET 
		desperson = pdesperson,
        desemail = pdesemail,
        nrphone = pnrphone
	WHERE idperson = vidperson;
    
    UPDATE tb_users
    SET
		deslogin = pdeslogin,
        despassword = pdespassword,
        inadmin = pinadmin
	WHERE iduser = piduser;
    
    SELECT * FROM tb_users a INNER JOIN tb_persons b USING(idperson) WHERE a.iduser = piduser;
    
END ;;sp_users_save


-- sp_users_delete
CREATE DEFINER=`root`@`localhost` PROCEDURE `sp_users_delete`(
piduser INT
)
BEGIN
	
    DECLARE vidperson INT;
    
	SELECT idperson INTO vidperson
    FROM tb_users
    WHERE iduser = piduser;
    
    DELETE FROM tb_users WHERE iduser = piduser;
    DELETE FROM tb_persons WHERE idperson = vidperson;
    
END ;;

DELIMITER $$
CREATE PROCEDURE `sp_userspasswordsrecoveries_create`(
piduser INT,
pdesip VARCHAR(45)
)
BEGIN
	
	INSERT INTO tb_userspasswordsrecoveries (iduser, desip)
    VALUES(piduser, pdesip);
    
    SELECT * FROM tb_userspasswordsrecoveries
    WHERE idrecovery = LAST_INSERT_ID();
    
END$$
DELIMITER ;	

-- query validating password recovery link
SELECT * FROM tb_userspasswordsrecoveries upr
INNER JOIN tb_users u USING (iduser)
INNER JOIN tb_persons p USING (idperson)
WHERE 
	upr.idrecovery
	AND 
	upr.dtrecovery IS NULL
    AND
	DATE_ADD(upr.dtregister, INTERVAL 1 HOUR) >= NOW();

SELECT * FROM tb_userspasswordsrecoveries;

DELIMITER $$
CREATE PROCEDURE `sp_categories_save` (
pidcategory INT,
pdescategory VARCHAR(64)
)
BEGIN
	
	IF pidcategory > 0 THEN
		
		UPDATE tb_categories
        SET descategory = pdescategory
        WHERE idcategory = pidcategory;
        
    ELSE
		
		INSERT INTO tb_categories (descategory) VALUES(pdescategory);
        
        SET pidcategory = LAST_INSERT_ID();
        
    END IF;
    
    SELECT * FROM tb_categories WHERE idcategory = pidcategory;
    
END$$

DELIMITER ;

DELIMITER $$
USE `db_ecommerce`$$
CREATE PROCEDURE `sp_products_save`(
pidproduct int(11),
pdesproduct varchar(64),
pvlprice decimal(10,2),
pvlwidth decimal(10,2),
pvlheight decimal(10,2),
pvllength decimal(10,2),
pvlweight decimal(10,2),
pdesurl varchar(128)
)
BEGIN
	
	IF pidproduct > 0 THEN
		
		UPDATE tb_products
        SET 
			desproduct = pdesproduct,
            vlprice = pvlprice,
            vlwidth = pvlwidth,
            vlheight = pvlheight,
            vllength = pvllength,
            vlweight = pvlweight,
            desurl = pdesurl
        WHERE idproduct = pidproduct;
        
    ELSE
		
		INSERT INTO tb_products (desproduct, vlprice, vlwidth, vlheight, vllength, vlweight, desurl) 
        VALUES(pdesproduct, pvlprice, pvlwidth, pvlheight, pvllength, pvlweight, pdesurl);
        
        SET pidproduct = LAST_INSERT_ID();
        
    END IF;
    
    SELECT * FROM tb_products WHERE idproduct = pidproduct;
    
END$$

DELIMITER ;

alter table tb_products modify idproduct int(11) not null auto_increment;

DELIMITER $$
CREATE PROCEDURE `sp_carts_save`(
pidcart INT,
pdessessionid VARCHAR(64),
piduser INT,
pdeszipcode CHAR(8),
pvlfreight DECIMAL(10,2),
pnrdays INT
)
BEGIN

    IF pidcart > 0 THEN
        
        UPDATE tb_carts
        SET
            dessessionid = pdessessionid,
            iduser = piduser,
            deszipcode = pdeszipcode,
            vlfreight = pvlfreight,
            nrdays = pnrdays
        WHERE idcart = pidcart;
        
    ELSE
        
        INSERT INTO tb_carts (dessessionid, iduser, deszipcode, vlfreight, nrdays)
        VALUES(pdessessionid, piduser, pdeszipcode, pvlfreight, pnrdays);
        
        SET pidcart = LAST_INSERT_ID();
        
    END IF;
    
    SELECT * FROM tb_carts WHERE idcart = pidcart;

END$$

DELIMITER ;
